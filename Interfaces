class Main {
    public static void main(String[] args) {
        Animal dog = new Dog();
        Animal cat = new Cat();

        dog.swim();
        dog.play();
        cat.swim();
        cat.play();
    }
}

interface Swimmer {
    void swim();
}

interface Player {
    void play();
}

abstract class Animal {
    public abstract void swim();

    public abstract void play();
}

class Dog extends Animal implements Swimmer, Player {
    public void swim() {
        System.out.println("Dog is swimming");
    }


    public void play() {
        System.out.println("Dog is playing");
    }
}

class Cat extends Animal implements Swimmer, Player {
    public void swim() {
        System.out.println("Cat is swimming");
    }

    public void play() {
        System.out.println("Cat is playing");
    }
}



// anonymous classes

public class Main
{
	public static void main(String[] args) {
        
       Purchase customer = new Purchase();
       Purchase specialCustomer = new Purchase(){
           //your code goes here
           public int totalAmount(int price) {
                // Apply a 20% discount for the special customer
                return price - (price * 20) / 100;
           }
        };
        
        System.out.println(customer.totalAmount(1000));
        System.out.println(specialCustomer.totalAmount(100000));
	}
}

class Purchase {
    int price;
    
    public int totalAmount(int price) {
        return price - (price*10)/100;
    }
}
